// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

import "@openzeppelin/contracts/token/ERC20/ERC20.sol";
import "@openzeppelin/contracts/access/Ownable.sol";

contract HANE is ERC20, Ownable {
    uint256 public taxPercentage = 2; // Example tax percentage (e.g., 2% tax per transaction)
    
    constructor() ERC20("HANE", "HANE") {
        _mint(msg.sender, 1000000000 * 10 ** decimals()); // Mint 1 billion tokens at deployment
    }

    // Override transfer function to implement tax
    function _transfer(address sender, address recipient, uint256 amount) internal override {
        uint256 taxAmount = amount * taxPercentage / 100;
        uint256 amountAfterTax = amount - taxAmount;

        // Transfer the tax to the contract owner
        super._transfer(sender, owner(), taxAmount);
        // Transfer the remaining amount to the recipient
        super._transfer(sender, recipient, amountAfterTax);
    }
}
